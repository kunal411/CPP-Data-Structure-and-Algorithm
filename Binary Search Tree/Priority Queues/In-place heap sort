/*
Given an integer array of size N. Sort this array (in decreasing order) using heap sort.
Note: Space complexity should be O(1).
Input Format:
The first line of input contains an integer, that denotes the value of the size of the array or N.
The following line contains N space separated integers, that denote the value of the elements of the array.
Output Format :
The first and only line of output contains array elements after sorting. The elements of the array in the output are separated by single space.
Constraints :
1 <= n <= 10^6
Time Limit: 1 sec
Sample Input 1:
6 
2 6 8 5 4 3
Sample Output 1:
8 6 5 4 3 2
*/

#include <iostream>
void percolateUp(int input[], int childIndex){

    int ci = childIndex;
    while (ci > 0){
        int parentIndex = (ci - 1) / 2;
        if (input[ci] < input[parentIndex]){
            int temp = input[parentIndex];
            input[parentIndex] = input[ci];
            input[ci] = temp;
        }

        else{
            break;
        }
        ci = parentIndex;
    }
    //for (int i = 0; i < n; i++){
      //  cout << input[i] << " ";
    //}
    return;
}

void percolateDown(int *input, int n){

    int parentIndex = 0;
    int leftChildIndex = 2 * parentIndex + 1;
    int rightChildIndex = 2 * parentIndex + 2;

    while (leftChildIndex < n){
        int minIndex = parentIndex;
        if (input[minIndex] > input[leftChildIndex]){
            minIndex = leftChildIndex;
        }
        if (rightChildIndex < n && input[minIndex] > input[rightChildIndex]){
            minIndex = rightChildIndex;
        }

        if (minIndex == parentIndex){
            break;
        }

        int temp = input[parentIndex];
        input[parentIndex] = input[minIndex];
        input[minIndex] = temp;

        parentIndex = minIndex;
        leftChildIndex = 2 * parentIndex + 1;
        rightChildIndex = 2 * parentIndex + 2;
    }

}

void heapSort(int input[], int n){

    for (int i = 1; i < n; i++){
        percolateUp(input, i);
    }

    int i = 0;
    while(i < n - 1){
        int temp = input[0];
        input[0] = input[n - i - 1];
        input[n - i - 1] = temp;
        percolateDown(input, n - i - 1);
        i++;
    }
}

using namespace std;

int main() {
    int size;
    cin >> size;

    int *input = new int[size];

    for (int i = 0; i < size; i++) {
        cin >> input[i];
    } 

    heapSort(input, size);

    for (int i = 0; i < size; i++) {
        cout << input[i] << " ";
    } 

    delete[] input;
}
